{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser } from \"./redux/actions/index\";\nimport FeedScreen from \"./components/auth/main/Feed\";\nimport SearchScreen from \"./components/auth/main/Search\";\nimport CheckoutScreen from \"./main/Checkout\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Feed\",\n          Component: FeedScreen,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                  size = _ref.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"home\",\n                color: color,\n                size: 26\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Search\",\n          Component: SearchScreen,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                  size = _ref2.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"search\",\n                color: color,\n                size: 26\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Checkout\",\n          Component: CheckoutScreen,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color,\n                  size = _ref3.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"cart\",\n                color: color,\n                size: 26\n              });\n            }\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"names":["createBottomTabNavigator","React","Component","connect","bindActionCreators","fetchUser","FeedScreen","SearchScreen","CheckoutScreen","MaterialCommunityIcons","Tab","Main","props","tabBarIcon","color","size","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"sources":["/Users/michelsim/Scoops/components/auth/Main.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport React, { Component } from 'react'\nimport { View, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser } from './redux/actions/index'\n\nimport FeedScreen from './components/auth/main/Feed'\nimport SearchScreen from './components/auth/main/Search'\nimport CheckoutScreen from './main/Checkout'\n\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nconst Tab = createBottomTabNavigator();\n\nexport class Main extends Component {\n    componentDidMount() {\n        this.props.fetchUser();\n    }\n  render() {\n    return (\n        <Tab.Navigator>\n            <Tab.Screen name = \"Feed\" Component = {FeedScreen}\n                options = {{\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name = \"home\" color = { color } size = { 26 }/>\n            )\n          }}/> \n            <Tab.Screen name = \"Search\" Component = {SearchScreen}\n                options = {{\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name = \"search\" color = { color } size = { 26 }/>\n            )\n          }}/>\n            <Tab.Screen name = \"Checkout\" Component = {CheckoutScreen}\n                options = {{\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name = \"cart\" color = { color } size = { 26 }/>\n            )\n          }}/>\n      </Tab.Navigator>\n    )\n  }\n}\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main)"],"mappings":";;;;;;;;;;AAAA,SAASA,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT;AAEA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AAEA,OAAOC,sBAAP;;;AAEA,IAAMC,GAAG,GAAGV,wBAAwB,EAApC;AAEA,WAAaW,IAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OACI,6BAAoB;MAChB,KAAKC,KAAL,CAAWP,SAAX;IACH;EAHL;IAAA;IAAA,OAIE,kBAAS;MACP,OACI,MAAC,GAAD,CAAK,SAAL;QAAA,WACI,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAG,MAAnB;UAA0B,SAAS,EAAIC,UAAvC;UACI,OAAO,EAAI;YACPO,UAAU,EAAE;cAAA,IAAGC,KAAH,QAAGA,KAAH;cAAA,IAAUC,IAAV,QAAUA,IAAV;cAAA,OACR,KAAC,sBAAD;gBAAwB,IAAI,EAAG,MAA/B;gBAAsC,KAAK,EAAKD,KAAhD;gBAAwD,IAAI,EAAK;cAAjE,EADQ;YAAA;UADL;QADf,EADJ,EAOI,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAG,QAAnB;UAA4B,SAAS,EAAIP,YAAzC;UACI,OAAO,EAAI;YACPM,UAAU,EAAE;cAAA,IAAGC,KAAH,SAAGA,KAAH;cAAA,IAAUC,IAAV,SAAUA,IAAV;cAAA,OACR,KAAC,sBAAD;gBAAwB,IAAI,EAAG,QAA/B;gBAAwC,KAAK,EAAKD,KAAlD;gBAA0D,IAAI,EAAK;cAAnE,EADQ;YAAA;UADL;QADf,EAPJ,EAaI,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAG,UAAnB;UAA8B,SAAS,EAAIN,cAA3C;UACI,OAAO,EAAI;YACPK,UAAU,EAAE;cAAA,IAAGC,KAAH,SAAGA,KAAH;cAAA,IAAUC,IAAV,SAAUA,IAAV;cAAA,OACR,KAAC,sBAAD;gBAAwB,IAAI,EAAG,MAA/B;gBAAsC,KAAK,EAAKD,KAAhD;gBAAwD,IAAI,EAAK;cAAjE,EADQ;YAAA;UADL;QADf,EAbJ;MAAA,EADJ;IAsBD;EA3BH;;EAAA;AAAA,EAA0BZ,SAA1B;;AA6BA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAA,OAAY;IAChCC,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBD;EADG,CAAZ;AAAA,CAAxB;;AAGA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;EAAA,OAAcjB,kBAAkB,CAAC;IAACC,SAAS,EAATA;EAAD,CAAD,EAAcgB,QAAd,CAAhC;AAAA,CAAzB;;AAEA,eAAelB,OAAO,CAACa,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CT,IAA3C,CAAf"},"metadata":{},"sourceType":"module"}