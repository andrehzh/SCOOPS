{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport BuyerSellerScreen from \"./components/auth/BuyerSeller\";\nimport LogInScreen from \"./components/auth/LogIn\";\nimport BuyerRegisterScreen from \"./components/auth/BuyerRegister\";\nimport SellerRegisterScreen from \"./components/auth/SellerRegister\";\nimport BuyerHomeScreen from \"./components/auth/BuyerHomePage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          children: [_jsx(Stack.Screen, {\n            name: \"Landing\",\n            component: LandingScreen,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"BuyerSeller\",\n            component: BuyerSellerScreen\n          }), _jsx(Stack.Screen, {\n            name: \"LogIn\",\n            component: LogInScreen\n          }), _jsx(Stack.Screen, {\n            name: \"BuyerRegister\",\n            component: BuyerRegisterScreen\n          }), _jsx(Stack.Screen, {\n            name: \"SellerRegister\",\n            component: SellerRegisterScreen\n          }), _jsx(Stack.Screen, {\n            name: \"BuyerHomePage\",\n            component: BuyerHomeScreen\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"names":["StatusBar","React","Component","firebase","NavigationContainer","createStackNavigator","LandingScreen","BuyerSellerScreen","LogInScreen","BuyerRegisterScreen","SellerRegisterScreen","BuyerHomeScreen","Stack","App","props","state","loaded","headerShown"],"sources":["/Users/michelsim/Scoops/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { View, Text } from 'react-native';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth'; \n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n/* const firebaseConfig = {\n  apiKey: \"AIzaSyChnrBnZ1AJKcwmy7r_Q43PGeFLg-VdY8M\",\n  authDomain: \"orbital-12dff.firebaseapp.com\",\n  projectId: \"orbital-12dff\",\n  storageBucket: \"orbital-12dff.appspot.com\",\n  messagingSenderId: \"344489565872\",\n  appId: \"1:344489565872:web:035b1ea17bee800537e575\",\n  measurementId: \"G-Y5FNVZHRSZ\"\n}; */\n\n/* if(firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n} */\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from './components/auth/Landing';\nimport BuyerSellerScreen from './components/auth/BuyerSeller';\nimport LogInScreen from './components/auth/LogIn';\nimport BuyerRegisterScreen from './components/auth/BuyerRegister';\nimport SellerRegisterScreen from './components/auth/SellerRegister';\nimport BuyerHomeScreen from './components/auth/BuyerHomePage';\n\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n    }\n  }\n  /*componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if(!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if(!loaded) {\n      return(\n        <View style ={{flex: 1, justifyContent: 'center'}}>\n          <Text>Loading</Text>\n        </View>\n      )\n    } */\n\n   /* if(!loggedIn) {\n      return ( */\n      render() { // delete render if using firebase\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName = \"Landing\"> \n            <Stack.Screen name = \"Landing\" component = {LandingScreen} options = {{ headerShown: false }}/>\n            <Stack.Screen name = \"BuyerSeller\" component = {BuyerSellerScreen}/>\n            <Stack.Screen name = \"LogIn\" component = {LogInScreen}/>\n            <Stack.Screen name = \"BuyerRegister\" component = {BuyerRegisterScreen}/>\n            <Stack.Screen name = \"SellerRegister\" component = {SellerRegisterScreen}/>\n            <Stack.Screen name = \"BuyerHomePage\" component = {BuyerHomeScreen}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n      }\n   //  );\n   // } \n\n    /* return (\n      <Provider store = {store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName = \"BuyerHomePage\"> \n            <Stack.Screen name = \"BuyerHomePage\" component = {BuyerHomeScreen} options = {{ headerShown: false }}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    ) */\n\n}\n\nexport default App\n\n"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AAiBA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,aAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,eAAP;;;AAGA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AAEA,WAAaQ,GAAb;EAAA;;EAAA;;EACE,aAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXC,MAAM,EAAE;IADG,CAAb;IAFiB;EAKlB;;EANH;IAAA;IAAA,OAkCM,kBAAS;MACP,KAAC,mBAAD;QAAA,UACE,MAAC,KAAD,CAAO,SAAP;UAAiB,gBAAgB,EAAG,SAApC;UAAA,WACE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAG,SAArB;YAA+B,SAAS,EAAIV,aAA5C;YAA2D,OAAO,EAAI;cAAEW,WAAW,EAAE;YAAf;UAAtE,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAG,aAArB;YAAmC,SAAS,EAAIV;UAAhD,EAFF,EAGE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAG,OAArB;YAA6B,SAAS,EAAIC;UAA1C,EAHF,EAIE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAG,eAArB;YAAqC,SAAS,EAAIC;UAAlD,EAJF,EAKE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAG,gBAArB;YAAsC,SAAS,EAAIC;UAAnD,EALF,EAME,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAG,eAArB;YAAqC,SAAS,EAAIC;UAAlD,EANF;QAAA;MADF;IAUD;EA7CP;;EAAA;AAAA,EAAyBT,SAAzB;AA6DA,eAAeW,GAAf"},"metadata":{},"sourceType":"module"}